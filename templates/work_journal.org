#+STARTUP: indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/css/solarized-dark.min.css" />
#+TITLE: Journal
#+OPTIONS: H:3
#+OPTIONS: toc:2
* Week of September 14
** <2015-09-16 Wed>
*** 1st stint of work (1.5 hrs)
**** Software Side
***** [[https://github.com/leeavital/Lojban-Translator][Lojban-Translator]] 
- It feels like a school project. Tried their examples and one throws an exception.
Namely, "do blari'o" is supposed to be "you're blue"
- The flags you can set are not that impressive. --tree simply prints
  the tree generated by the camxes package. -c prints the entire
  hard-coded dictionary, and -g prints the gismu dictionary.
****** pip and the multiple pythons
I broke pip trying to get Lojban-Translator to work. I finally got it
working, since pip has this cool feature where you can call different
pips using their python-version number. For some reason, though, my
pips ended up getting installed to pypy and pypy3... just as well?
***** More on Camxes
I wasn't sure what the morphology method did, until I tried a couple
more words outside of the example.

#+BEGIN_SRC python 
  >>>> print camxes.morphology("coi")  # Hello
  text
   `- CMAVO
       `- COI
           +- c
           |   `- u'c'
           +- o
           |   `- u'o'
           `- i
               `- u'i'
  >>>> print camxes.morphology("co'o") # Bye
  text
   `- CMAVO
       `- COI
           +- c
           |   `- u'c'
           +- o
           |   `- u'o'
           +- h
           |   `- u"'"
           `- o
               `- u'o'
  >>>> print camxes.morphology("rodo") # everyone
  text
   +- CMAVO
   |   `- PA
   |       +- r
   |       |   `- u'r'
   |       `- o
   |           `- u'o'
   `- CMAVO
       `- KOhA
           +- d
           |   `- u'd'
           `- o
               `- u'o'
  >>>> print camxes.morphology("mlatu") # is a cat, to be a cat
  text
   `- BRIVLA
       `- gismu
          +- stressedLongRafsi
           |   +- stressedCCVRafsi
           |   |   +- initialPair
           |   |   |   +- consonant
           |   |   |   |   `- syllabic
           |   |   |   |       `- m
           |   |   |   |           `- u'm'
           |   |   |   `- consonant
           |   |   |       `- syllabic
           |   |   |           `- l
           |   |   |               `- u'l'
           |   |   `- stressedVowel
           |   |       `- vowel
           |   |           `- a
           |   |               `- u'a'
           |   `- consonant
           |       `- unvoiced
           |           `- t
           |               `- u't'
           `- vowel
               `- u
                   `- u'u'
>>>> print camxes.morphology("co'o rodo") # Bye Everyone
text
 +- CMAVO
 |   `- COI
 |       +- c
 |       |   `- u'c'
 |       +- o
 |       |   `- u'o'
 |       +- h
 |       |   `- u"'"
 |       `- o
 |           `- u'o'
 +- spaces
 |   `- initialSpaces
 |       `- spaceChar
 |           `- u' '
 +- CMAVO
 |   `- PA
 |       +- r
 |       |   `- u'r'
 |       `- o
 |           `- u'o'
 `- CMAVO
     `- KOhA
         +- d
         |   `- u'd'
         `- o
             `- u'o'
#+END_SRC
- It's interesting that it classifies the word and breaks it down into morphologic components
- It produces a really indepth mapping of a grammatic structure

** <2015-09-15 Tue>
*** Had a meeting with Kauffman at 9 am.
Work hard, work smart, honor the time commitments.
Got a list of things to get done.
*** List of Stuff to Do
**** TODO Send Preliminary Results by <2015-09-21 Mon>
**** TODO Translate "The duck is ready to eat" into two lojban sentences.
**** TODO Produce an overview of the grammar
**** TODO Produce list of tools with quality evals
#+BEGIN_QUOTE
"Dictionaries are useful.\\
Parsers are more useful.\\
Does a Lojban to English translator exist?"
#+END_QUOTE
**** TODO Get NLP/MT background resource 
**** TODO Check out NLTK. See if it's good for Lojban (or too English-centric)
**** TODO Meet with him at 9:30, <2015-09-25 Fri>, preparing the above as demonstration
*** Libraries are good places not to get distracted
*** Things Done (1.0 hrs)
**** Fixed Pip.
Turns out it was a package manager fight. Once I unemerged pip and
reinstalled it using the manual installer, it worked just fine.
**** Installed and played with Camxes.
It's a really useful package. It takes a lojban phrase and then
generates a tree, with parts of speech tagged.

It can also check for grammatical correctness.

*** Kunal got back to me
***** TODO Look into IRSLTM
This is a modeling toolkit by Marcello Federico at FBK and University of Trento in Italy
***** TODO Look into Berkley POS (Parts of Speech) Tagger
***** TODO Look into Tree Tagger
***** TODO Look into shef.mt.tools Java package
***** TODO Go through MT work done by RWTH Aachen
Good enough for a jumping point in learning MT
***** TODO Also look at previous work done by AppTek, prior to eBay acquisition
They specialized in Automated Speech Recognition (ASR) and Machine Translation (MT)
***** TODO Linguistics Textbook: Find Jurafsky and Martin
**** Emailed Riley, asked him for more resources
He saw it. What next...
